{"src/lib/components/AppBar.react.js": {"description": "A Dash material-ui Paper component", "displayName": "AppBar", "methods": [], "props": {"children": {"flowType": {"name": "node"}, "required": false, "description": "The content of the component.", "defaultValue": {"value": "[]", "computed": false}}, "classes": {"flowType": {"name": "object"}, "required": false, "description": "Override or extend the styles applied to the component. See CSS API below for more details.", "defaultValue": {"value": "{}", "computed": false}}, "color": {"flowType": {"name": "union", "raw": "'inherit' | 'primary' | 'secondary' | 'default'", "elements": [{"name": "literal", "value": "'inherit'"}, {"name": "literal", "value": "'primary'"}, {"name": "literal", "value": "'secondary'"}, {"name": "literal", "value": "'default'"}]}, "required": false, "description": "The color of the component. It supports those theme colors that make sense for this component.", "defaultValue": {"value": "'primary'", "computed": false}}, "position": {"flowType": {"name": "union", "raw": "'fixed' | 'absolute' | 'sticky' | 'static' | 'relative'", "elements": [{"name": "literal", "value": "'fixed'"}, {"name": "literal", "value": "'absolute'"}, {"name": "literal", "value": "'sticky'"}, {"name": "literal", "value": "'static'"}, {"name": "literal", "value": "'relative'"}]}, "required": false, "description": "The positioning type. The behavior of the different options is described in the MDN web docs. Note: sticky is not universally supported and will fall back to static when unavailable.", "defaultValue": {"value": "'fixed'", "computed": false}}}}, "src/lib/components/Grid.react.js": {"description": "A Dash material-ui Grid component", "displayName": "Grid", "methods": [], "props": {"alignContent": {"flowType": {"name": "union", "raw": "'stretch' | 'center' | 'flex-start' | 'flex-end' | 'space-between' | 'space-around'", "elements": [{"name": "literal", "value": "'stretch'"}, {"name": "literal", "value": "'center'"}, {"name": "literal", "value": "'flex-start'"}, {"name": "literal", "value": "'flex-end'"}, {"name": "literal", "value": "'space-between'"}, {"name": "literal", "value": "'space-around'"}]}, "required": false, "description": "Defines the align-content style property. It's applied for all screen sizes.", "defaultValue": {"value": "'stretch'", "computed": false}}, "alignItems": {"flowType": {"name": "union", "raw": "'flex-start' | 'center' | 'flex-end' | 'stretch' | 'baseline'", "elements": [{"name": "literal", "value": "'flex-start'"}, {"name": "literal", "value": "'center'"}, {"name": "literal", "value": "'flex-end'"}, {"name": "literal", "value": "'stretch'"}, {"name": "literal", "value": "'baseline'"}]}, "required": false, "description": "Defines the align-items style property. It's applied for all screen sizes.", "defaultValue": {"value": "'stretch'", "computed": false}}, "children": {"flowType": {"name": "node"}, "required": false, "description": "The content of the component.", "defaultValue": {"value": "[]", "computed": false}}, "classes": {"flowType": {"name": "object"}, "required": false, "description": "Override or extend the styles applied to the component.", "defaultValue": {"value": "{}", "computed": false}}, "component": {"flowType": {"name": "literal", "value": "'div'"}, "required": false, "description": "The component used for the root node. Either a string to use a DOM element or a component.", "defaultValue": {"value": "'div'", "computed": false}}, "container": {"flowType": {"name": "boolean"}, "required": false, "description": "If true, the component will have the flex container behavior. You should be wrapping items with a container.", "defaultValue": {"value": "false", "computed": false}}, "direction": {"flowType": {"name": "union", "raw": "'row' | 'row-reverse' | 'column' | 'column-reverse'", "elements": [{"name": "literal", "value": "'row'"}, {"name": "literal", "value": "'row-reverse'"}, {"name": "literal", "value": "'column'"}, {"name": "literal", "value": "'column-reverse'"}]}, "required": false, "description": "Defines the flex-direction style property. It is applied for all screen sizes.", "defaultValue": {"value": "'row'", "computed": false}}, "item": {"flowType": {"name": "boolean"}, "required": false, "description": "If true, the component will have the flex item behavior. You should be wrapping items with a container.", "defaultValue": {"value": "false", "computed": false}}, "justify": {"flowType": {"name": "union", "raw": "'flex-start' | 'center' | 'flex-end' | 'space-between' | 'space-around' | 'space-evenly'", "elements": [{"name": "literal", "value": "'flex-start'"}, {"name": "literal", "value": "'center'"}, {"name": "literal", "value": "'flex-end'"}, {"name": "literal", "value": "'space-between'"}, {"name": "literal", "value": "'space-around'"}, {"name": "literal", "value": "'space-evenly'"}]}, "required": false, "description": "Defines the justify-content style property. It is applied for all screen sizes.", "defaultValue": {"value": "'flex-start'", "computed": false}}, "lg": {"flowType": {"name": "union", "raw": "false | 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12", "elements": [{"name": "literal", "value": "false"}, {"name": "literal", "value": "'auto'"}, {"name": "literal", "value": "true"}, {"name": "literal", "value": "1"}, {"name": "literal", "value": "2"}, {"name": "literal", "value": "3"}, {"name": "literal", "value": "4"}, {"name": "literal", "value": "5"}, {"name": "literal", "value": "6"}, {"name": "literal", "value": "7"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "9"}, {"name": "literal", "value": "10"}, {"name": "literal", "value": "11"}, {"name": "literal", "value": "12"}]}, "required": false, "description": "Defines the number of grids the component is going to use. It's applied for the lg breakpoint and wider screens if not overridden.", "defaultValue": {"value": "false", "computed": false}}, "md": {"flowType": {"name": "union", "raw": "false | 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12", "elements": [{"name": "literal", "value": "false"}, {"name": "literal", "value": "'auto'"}, {"name": "literal", "value": "true"}, {"name": "literal", "value": "1"}, {"name": "literal", "value": "2"}, {"name": "literal", "value": "3"}, {"name": "literal", "value": "4"}, {"name": "literal", "value": "5"}, {"name": "literal", "value": "6"}, {"name": "literal", "value": "7"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "9"}, {"name": "literal", "value": "10"}, {"name": "literal", "value": "11"}, {"name": "literal", "value": "12"}]}, "required": false, "description": "Defines the number of grids the component is going to use. It's applied for the lg breakpoint and wider screens if not overridden.", "defaultValue": {"value": "false", "computed": false}}, "sm": {"flowType": {"name": "union", "raw": "false | 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12", "elements": [{"name": "literal", "value": "false"}, {"name": "literal", "value": "'auto'"}, {"name": "literal", "value": "true"}, {"name": "literal", "value": "1"}, {"name": "literal", "value": "2"}, {"name": "literal", "value": "3"}, {"name": "literal", "value": "4"}, {"name": "literal", "value": "5"}, {"name": "literal", "value": "6"}, {"name": "literal", "value": "7"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "9"}, {"name": "literal", "value": "10"}, {"name": "literal", "value": "11"}, {"name": "literal", "value": "12"}]}, "required": false, "description": "Defines the number of grids the component is going to use. It's applied for the sm breakpoint and wider screens if not overridden.", "defaultValue": {"value": "false", "computed": false}}, "spacing": {"flowType": {"name": "union", "raw": "0 | 8 | 16 | 24 | 32 | 40", "elements": [{"name": "literal", "value": "0"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "16"}, {"name": "literal", "value": "24"}, {"name": "literal", "value": "32"}, {"name": "literal", "value": "40"}]}, "required": false, "description": "Defines the space between the type item component. It can only be used on a type container component.", "defaultValue": {"value": "0", "computed": false}}, "wrap": {"flowType": {"name": "union", "raw": "'nowrap' | 'wrap' | 'wrap-reverse'", "elements": [{"name": "literal", "value": "'nowrap'"}, {"name": "literal", "value": "'wrap'"}, {"name": "literal", "value": "'wrap-reverse'"}]}, "required": false, "description": "Defines the flex-wrap style property. It's applied for all screen sizes.", "defaultValue": {"value": "'wrap'", "computed": false}}, "xl": {"flowType": {"name": "union", "raw": "false | 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12", "elements": [{"name": "literal", "value": "false"}, {"name": "literal", "value": "'auto'"}, {"name": "literal", "value": "true"}, {"name": "literal", "value": "1"}, {"name": "literal", "value": "2"}, {"name": "literal", "value": "3"}, {"name": "literal", "value": "4"}, {"name": "literal", "value": "5"}, {"name": "literal", "value": "6"}, {"name": "literal", "value": "7"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "9"}, {"name": "literal", "value": "10"}, {"name": "literal", "value": "11"}, {"name": "literal", "value": "12"}]}, "required": false, "description": "Defines the number of grids the component is going to use. It's applied for the xl breakpoint and wider screens.", "defaultValue": {"value": "false", "computed": false}}, "xs": {"flowType": {"name": "union", "raw": "false | 'auto' | true | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12", "elements": [{"name": "literal", "value": "false"}, {"name": "literal", "value": "'auto'"}, {"name": "literal", "value": "true"}, {"name": "literal", "value": "1"}, {"name": "literal", "value": "2"}, {"name": "literal", "value": "3"}, {"name": "literal", "value": "4"}, {"name": "literal", "value": "5"}, {"name": "literal", "value": "6"}, {"name": "literal", "value": "7"}, {"name": "literal", "value": "8"}, {"name": "literal", "value": "9"}, {"name": "literal", "value": "10"}, {"name": "literal", "value": "11"}, {"name": "literal", "value": "12"}]}, "required": false, "description": "Defines the number of grids the component is going to use. It's applied for all the screen sizes with the lowest priority.", "defaultValue": {"value": "false", "computed": false}}, "zeroMinWidth": {"flowType": {"name": "boolean"}, "required": false, "description": "If true, it sets min-width: 0 on the item. Refer to the limitations section of the documentation to better understand the use case.", "defaultValue": {"value": "false", "computed": false}}}}, "src/lib/components/Paper.react.js": {"description": "A Dash material-ui Paper component", "displayName": "Paper", "methods": [], "props": {"children": {"flowType": {"name": "node"}, "required": false, "description": "The content of the component.", "defaultValue": {"value": "[]", "computed": false}}, "classes": {"flowType": {"name": "object"}, "required": false, "description": "Override or extend the styles applied to the component. See CSS API below for more details.", "defaultValue": {"value": "{}", "computed": false}}, "component": {"flowType": {"name": "componentPropType"}, "required": false, "description": "The component used for the root node. Either a string to use a DOM element or a component.", "defaultValue": {"value": "'div'", "computed": false}}, "elevation": {"flowType": {"name": "number"}, "required": false, "description": "Shadow depth, corresponds to dp in the spec. It's accepting values between 0 and 24 inclusive.", "defaultValue": {"value": "2", "computed": false}}, "square": {"flowType": {"name": "boolean"}, "required": false, "description": "If true, rounded corners are disabled.", "defaultValue": {"value": "false", "computed": false}}}}}